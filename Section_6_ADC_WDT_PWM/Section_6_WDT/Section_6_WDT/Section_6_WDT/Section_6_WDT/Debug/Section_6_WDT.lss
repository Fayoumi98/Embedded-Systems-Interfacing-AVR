
Section_6_WDT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000003e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000438  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000438  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000468  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000088  00000000  00000000  000004a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c77  00000000  00000000  0000052c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000763  00000000  00000000  000011a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000817  00000000  00000000  00001906  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f8  00000000  00000000  00002120  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003b0  00000000  00000000  00002218  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005c8  00000000  00000000  000025c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000058  00000000  00000000  00002b90  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 aa 01 	call	0x354	; 0x354 <main>
  64:	0c 94 f0 01 	jmp	0x3e0	; 0x3e0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <LCD_write_command>:
	while(txt[i] != '\0')
	{
		LCD_write_char(txt[i]);
		i++;
	}
}
  6c:	9b b3       	in	r25, 0x1b	; 27
  6e:	97 7f       	andi	r25, 0xF7	; 247
  70:	9b bb       	out	0x1b, r25	; 27
  72:	88 23       	and	r24, r24
  74:	24 f0       	brlt	.+8      	; 0x7e <LCD_write_command+0x12>
  76:	9b b3       	in	r25, 0x1b	; 27
  78:	9f 77       	andi	r25, 0x7F	; 127
  7a:	9b bb       	out	0x1b, r25	; 27
  7c:	03 c0       	rjmp	.+6      	; 0x84 <LCD_write_command+0x18>
  7e:	9b b3       	in	r25, 0x1b	; 27
  80:	90 68       	ori	r25, 0x80	; 128
  82:	9b bb       	out	0x1b, r25	; 27
  84:	86 fd       	sbrc	r24, 6
  86:	04 c0       	rjmp	.+8      	; 0x90 <LCD_write_command+0x24>
  88:	9b b3       	in	r25, 0x1b	; 27
  8a:	9f 7b       	andi	r25, 0xBF	; 191
  8c:	9b bb       	out	0x1b, r25	; 27
  8e:	03 c0       	rjmp	.+6      	; 0x96 <LCD_write_command+0x2a>
  90:	9b b3       	in	r25, 0x1b	; 27
  92:	90 64       	ori	r25, 0x40	; 64
  94:	9b bb       	out	0x1b, r25	; 27
  96:	85 fd       	sbrc	r24, 5
  98:	04 c0       	rjmp	.+8      	; 0xa2 <LCD_write_command+0x36>
  9a:	9b b3       	in	r25, 0x1b	; 27
  9c:	9f 7d       	andi	r25, 0xDF	; 223
  9e:	9b bb       	out	0x1b, r25	; 27
  a0:	03 c0       	rjmp	.+6      	; 0xa8 <LCD_write_command+0x3c>
  a2:	9b b3       	in	r25, 0x1b	; 27
  a4:	90 62       	ori	r25, 0x20	; 32
  a6:	9b bb       	out	0x1b, r25	; 27
  a8:	84 fd       	sbrc	r24, 4
  aa:	04 c0       	rjmp	.+8      	; 0xb4 <LCD_write_command+0x48>
  ac:	9b b3       	in	r25, 0x1b	; 27
  ae:	9f 7e       	andi	r25, 0xEF	; 239
  b0:	9b bb       	out	0x1b, r25	; 27
  b2:	03 c0       	rjmp	.+6      	; 0xba <LCD_write_command+0x4e>
  b4:	9b b3       	in	r25, 0x1b	; 27
  b6:	90 61       	ori	r25, 0x10	; 16
  b8:	9b bb       	out	0x1b, r25	; 27
  ba:	9b b3       	in	r25, 0x1b	; 27
  bc:	94 60       	ori	r25, 0x04	; 4
  be:	9b bb       	out	0x1b, r25	; 27
  c0:	ef e9       	ldi	r30, 0x9F	; 159
  c2:	ff e0       	ldi	r31, 0x0F	; 15
  c4:	31 97       	sbiw	r30, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <LCD_write_command+0x58>
  c8:	00 c0       	rjmp	.+0      	; 0xca <LCD_write_command+0x5e>
  ca:	00 00       	nop
  cc:	9b b3       	in	r25, 0x1b	; 27
  ce:	9b 7f       	andi	r25, 0xFB	; 251
  d0:	9b bb       	out	0x1b, r25	; 27
  d2:	ef e9       	ldi	r30, 0x9F	; 159
  d4:	ff e0       	ldi	r31, 0x0F	; 15
  d6:	31 97       	sbiw	r30, 0x01	; 1
  d8:	f1 f7       	brne	.-4      	; 0xd6 <LCD_write_command+0x6a>
  da:	00 c0       	rjmp	.+0      	; 0xdc <LCD_write_command+0x70>
  dc:	00 00       	nop
  de:	83 fd       	sbrc	r24, 3
  e0:	04 c0       	rjmp	.+8      	; 0xea <LCD_write_command+0x7e>
  e2:	9b b3       	in	r25, 0x1b	; 27
  e4:	9f 77       	andi	r25, 0x7F	; 127
  e6:	9b bb       	out	0x1b, r25	; 27
  e8:	03 c0       	rjmp	.+6      	; 0xf0 <LCD_write_command+0x84>
  ea:	9b b3       	in	r25, 0x1b	; 27
  ec:	90 68       	ori	r25, 0x80	; 128
  ee:	9b bb       	out	0x1b, r25	; 27
  f0:	82 fd       	sbrc	r24, 2
  f2:	04 c0       	rjmp	.+8      	; 0xfc <LCD_write_command+0x90>
  f4:	9b b3       	in	r25, 0x1b	; 27
  f6:	9f 7b       	andi	r25, 0xBF	; 191
  f8:	9b bb       	out	0x1b, r25	; 27
  fa:	03 c0       	rjmp	.+6      	; 0x102 <LCD_write_command+0x96>
  fc:	9b b3       	in	r25, 0x1b	; 27
  fe:	90 64       	ori	r25, 0x40	; 64
 100:	9b bb       	out	0x1b, r25	; 27
 102:	81 fd       	sbrc	r24, 1
 104:	04 c0       	rjmp	.+8      	; 0x10e <LCD_write_command+0xa2>
 106:	9b b3       	in	r25, 0x1b	; 27
 108:	9f 7d       	andi	r25, 0xDF	; 223
 10a:	9b bb       	out	0x1b, r25	; 27
 10c:	03 c0       	rjmp	.+6      	; 0x114 <LCD_write_command+0xa8>
 10e:	9b b3       	in	r25, 0x1b	; 27
 110:	90 62       	ori	r25, 0x20	; 32
 112:	9b bb       	out	0x1b, r25	; 27
 114:	80 fd       	sbrc	r24, 0
 116:	04 c0       	rjmp	.+8      	; 0x120 <LCD_write_command+0xb4>
 118:	8b b3       	in	r24, 0x1b	; 27
 11a:	8f 7e       	andi	r24, 0xEF	; 239
 11c:	8b bb       	out	0x1b, r24	; 27
 11e:	03 c0       	rjmp	.+6      	; 0x126 <LCD_write_command+0xba>
 120:	8b b3       	in	r24, 0x1b	; 27
 122:	80 61       	ori	r24, 0x10	; 16
 124:	8b bb       	out	0x1b, r24	; 27
 126:	8b b3       	in	r24, 0x1b	; 27
 128:	84 60       	ori	r24, 0x04	; 4
 12a:	8b bb       	out	0x1b, r24	; 27
 12c:	8f e9       	ldi	r24, 0x9F	; 159
 12e:	9f e0       	ldi	r25, 0x0F	; 15
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <LCD_write_command+0xc4>
 134:	00 c0       	rjmp	.+0      	; 0x136 <LCD_write_command+0xca>
 136:	00 00       	nop
 138:	8b b3       	in	r24, 0x1b	; 27
 13a:	8b 7f       	andi	r24, 0xFB	; 251
 13c:	8b bb       	out	0x1b, r24	; 27
 13e:	ef e9       	ldi	r30, 0x9F	; 159
 140:	ff e0       	ldi	r31, 0x0F	; 15
 142:	31 97       	sbiw	r30, 0x01	; 1
 144:	f1 f7       	brne	.-4      	; 0x142 <LCD_write_command+0xd6>
 146:	00 c0       	rjmp	.+0      	; 0x148 <LCD_write_command+0xdc>
 148:	00 00       	nop
 14a:	08 95       	ret

0000014c <LCD_init>:
 14c:	8a b3       	in	r24, 0x1a	; 26
 14e:	8c 6f       	ori	r24, 0xFC	; 252
 150:	8a bb       	out	0x1a, r24	; 26
 152:	8b b3       	in	r24, 0x1b	; 27
 154:	83 70       	andi	r24, 0x03	; 3
 156:	8b bb       	out	0x1b, r24	; 27
 158:	83 e0       	ldi	r24, 0x03	; 3
 15a:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 15e:	8f e7       	ldi	r24, 0x7F	; 127
 160:	9e e3       	ldi	r25, 0x3E	; 62
 162:	01 97       	sbiw	r24, 0x01	; 1
 164:	f1 f7       	brne	.-4      	; 0x162 <LCD_init+0x16>
 166:	00 c0       	rjmp	.+0      	; 0x168 <LCD_init+0x1c>
 168:	00 00       	nop
 16a:	83 e0       	ldi	r24, 0x03	; 3
 16c:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 170:	8f e7       	ldi	r24, 0x7F	; 127
 172:	9e e3       	ldi	r25, 0x3E	; 62
 174:	01 97       	sbiw	r24, 0x01	; 1
 176:	f1 f7       	brne	.-4      	; 0x174 <LCD_init+0x28>
 178:	00 c0       	rjmp	.+0      	; 0x17a <LCD_init+0x2e>
 17a:	00 00       	nop
 17c:	83 e0       	ldi	r24, 0x03	; 3
 17e:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 182:	8f e7       	ldi	r24, 0x7F	; 127
 184:	9e e3       	ldi	r25, 0x3E	; 62
 186:	01 97       	sbiw	r24, 0x01	; 1
 188:	f1 f7       	brne	.-4      	; 0x186 <LCD_init+0x3a>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <LCD_init+0x40>
 18c:	00 00       	nop
 18e:	82 e0       	ldi	r24, 0x02	; 2
 190:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 194:	88 e2       	ldi	r24, 0x28	; 40
 196:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 19a:	88 e0       	ldi	r24, 0x08	; 8
 19c:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 1a0:	81 e0       	ldi	r24, 0x01	; 1
 1a2:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 1a6:	86 e0       	ldi	r24, 0x06	; 6
 1a8:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 1b2:	8c e0       	ldi	r24, 0x0C	; 12
 1b4:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
 1b8:	9f ef       	ldi	r25, 0xFF	; 255
 1ba:	29 ef       	ldi	r18, 0xF9	; 249
 1bc:	80 e0       	ldi	r24, 0x00	; 0
 1be:	91 50       	subi	r25, 0x01	; 1
 1c0:	20 40       	sbci	r18, 0x00	; 0
 1c2:	80 40       	sbci	r24, 0x00	; 0
 1c4:	e1 f7       	brne	.-8      	; 0x1be <LCD_init+0x72>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <LCD_init+0x7c>
 1c8:	00 00       	nop
 1ca:	08 95       	ret

000001cc <LCD_write_char>:
 1cc:	9b b3       	in	r25, 0x1b	; 27
 1ce:	98 60       	ori	r25, 0x08	; 8
 1d0:	9b bb       	out	0x1b, r25	; 27
 1d2:	88 23       	and	r24, r24
 1d4:	24 f0       	brlt	.+8      	; 0x1de <LCD_write_char+0x12>
 1d6:	9b b3       	in	r25, 0x1b	; 27
 1d8:	9f 77       	andi	r25, 0x7F	; 127
 1da:	9b bb       	out	0x1b, r25	; 27
 1dc:	03 c0       	rjmp	.+6      	; 0x1e4 <LCD_write_char+0x18>
 1de:	9b b3       	in	r25, 0x1b	; 27
 1e0:	90 68       	ori	r25, 0x80	; 128
 1e2:	9b bb       	out	0x1b, r25	; 27
 1e4:	86 fd       	sbrc	r24, 6
 1e6:	04 c0       	rjmp	.+8      	; 0x1f0 <LCD_write_char+0x24>
 1e8:	9b b3       	in	r25, 0x1b	; 27
 1ea:	9f 7b       	andi	r25, 0xBF	; 191
 1ec:	9b bb       	out	0x1b, r25	; 27
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <LCD_write_char+0x2a>
 1f0:	9b b3       	in	r25, 0x1b	; 27
 1f2:	90 64       	ori	r25, 0x40	; 64
 1f4:	9b bb       	out	0x1b, r25	; 27
 1f6:	85 fd       	sbrc	r24, 5
 1f8:	04 c0       	rjmp	.+8      	; 0x202 <LCD_write_char+0x36>
 1fa:	9b b3       	in	r25, 0x1b	; 27
 1fc:	9f 7d       	andi	r25, 0xDF	; 223
 1fe:	9b bb       	out	0x1b, r25	; 27
 200:	03 c0       	rjmp	.+6      	; 0x208 <LCD_write_char+0x3c>
 202:	9b b3       	in	r25, 0x1b	; 27
 204:	90 62       	ori	r25, 0x20	; 32
 206:	9b bb       	out	0x1b, r25	; 27
 208:	84 fd       	sbrc	r24, 4
 20a:	04 c0       	rjmp	.+8      	; 0x214 <LCD_write_char+0x48>
 20c:	9b b3       	in	r25, 0x1b	; 27
 20e:	9f 7e       	andi	r25, 0xEF	; 239
 210:	9b bb       	out	0x1b, r25	; 27
 212:	03 c0       	rjmp	.+6      	; 0x21a <LCD_write_char+0x4e>
 214:	9b b3       	in	r25, 0x1b	; 27
 216:	90 61       	ori	r25, 0x10	; 16
 218:	9b bb       	out	0x1b, r25	; 27
 21a:	9b b3       	in	r25, 0x1b	; 27
 21c:	94 60       	ori	r25, 0x04	; 4
 21e:	9b bb       	out	0x1b, r25	; 27
 220:	ef e9       	ldi	r30, 0x9F	; 159
 222:	ff e0       	ldi	r31, 0x0F	; 15
 224:	31 97       	sbiw	r30, 0x01	; 1
 226:	f1 f7       	brne	.-4      	; 0x224 <LCD_write_char+0x58>
 228:	00 c0       	rjmp	.+0      	; 0x22a <LCD_write_char+0x5e>
 22a:	00 00       	nop
 22c:	9b b3       	in	r25, 0x1b	; 27
 22e:	9b 7f       	andi	r25, 0xFB	; 251
 230:	9b bb       	out	0x1b, r25	; 27
 232:	ef e9       	ldi	r30, 0x9F	; 159
 234:	ff e0       	ldi	r31, 0x0F	; 15
 236:	31 97       	sbiw	r30, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <LCD_write_char+0x6a>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <LCD_write_char+0x70>
 23c:	00 00       	nop
 23e:	83 fd       	sbrc	r24, 3
 240:	04 c0       	rjmp	.+8      	; 0x24a <LCD_write_char+0x7e>
 242:	9b b3       	in	r25, 0x1b	; 27
 244:	9f 77       	andi	r25, 0x7F	; 127
 246:	9b bb       	out	0x1b, r25	; 27
 248:	03 c0       	rjmp	.+6      	; 0x250 <LCD_write_char+0x84>
 24a:	9b b3       	in	r25, 0x1b	; 27
 24c:	90 68       	ori	r25, 0x80	; 128
 24e:	9b bb       	out	0x1b, r25	; 27
 250:	82 fd       	sbrc	r24, 2
 252:	04 c0       	rjmp	.+8      	; 0x25c <LCD_write_char+0x90>
 254:	9b b3       	in	r25, 0x1b	; 27
 256:	9f 7b       	andi	r25, 0xBF	; 191
 258:	9b bb       	out	0x1b, r25	; 27
 25a:	03 c0       	rjmp	.+6      	; 0x262 <LCD_write_char+0x96>
 25c:	9b b3       	in	r25, 0x1b	; 27
 25e:	90 64       	ori	r25, 0x40	; 64
 260:	9b bb       	out	0x1b, r25	; 27
 262:	81 fd       	sbrc	r24, 1
 264:	04 c0       	rjmp	.+8      	; 0x26e <LCD_write_char+0xa2>
 266:	9b b3       	in	r25, 0x1b	; 27
 268:	9f 7d       	andi	r25, 0xDF	; 223
 26a:	9b bb       	out	0x1b, r25	; 27
 26c:	03 c0       	rjmp	.+6      	; 0x274 <LCD_write_char+0xa8>
 26e:	9b b3       	in	r25, 0x1b	; 27
 270:	90 62       	ori	r25, 0x20	; 32
 272:	9b bb       	out	0x1b, r25	; 27
 274:	80 fd       	sbrc	r24, 0
 276:	04 c0       	rjmp	.+8      	; 0x280 <LCD_write_char+0xb4>
 278:	8b b3       	in	r24, 0x1b	; 27
 27a:	8f 7e       	andi	r24, 0xEF	; 239
 27c:	8b bb       	out	0x1b, r24	; 27
 27e:	03 c0       	rjmp	.+6      	; 0x286 <LCD_write_char+0xba>
 280:	8b b3       	in	r24, 0x1b	; 27
 282:	80 61       	ori	r24, 0x10	; 16
 284:	8b bb       	out	0x1b, r24	; 27
 286:	8b b3       	in	r24, 0x1b	; 27
 288:	84 60       	ori	r24, 0x04	; 4
 28a:	8b bb       	out	0x1b, r24	; 27
 28c:	8f e9       	ldi	r24, 0x9F	; 159
 28e:	9f e0       	ldi	r25, 0x0F	; 15
 290:	01 97       	sbiw	r24, 0x01	; 1
 292:	f1 f7       	brne	.-4      	; 0x290 <LCD_write_char+0xc4>
 294:	00 c0       	rjmp	.+0      	; 0x296 <LCD_write_char+0xca>
 296:	00 00       	nop
 298:	8b b3       	in	r24, 0x1b	; 27
 29a:	8b 7f       	andi	r24, 0xFB	; 251
 29c:	8b bb       	out	0x1b, r24	; 27
 29e:	ef e9       	ldi	r30, 0x9F	; 159
 2a0:	ff e0       	ldi	r31, 0x0F	; 15
 2a2:	31 97       	sbiw	r30, 0x01	; 1
 2a4:	f1 f7       	brne	.-4      	; 0x2a2 <LCD_write_char+0xd6>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <LCD_write_char+0xdc>
 2a8:	00 00       	nop
 2aa:	08 95       	ret

000002ac <LCD_write_num>:

void LCD_write_num(uint32_t num)
{
 2ac:	cf 92       	push	r12
 2ae:	df 92       	push	r13
 2b0:	ef 92       	push	r14
 2b2:	ff 92       	push	r15
 2b4:	1f 93       	push	r17
 2b6:	cf 93       	push	r28
 2b8:	df 93       	push	r29
 2ba:	cd b7       	in	r28, 0x3d	; 61
 2bc:	de b7       	in	r29, 0x3e	; 62
 2be:	2a 97       	sbiw	r28, 0x0a	; 10
 2c0:	0f b6       	in	r0, 0x3f	; 63
 2c2:	f8 94       	cli
 2c4:	de bf       	out	0x3e, r29	; 62
 2c6:	0f be       	out	0x3f, r0	; 63
 2c8:	cd bf       	out	0x3d, r28	; 61
 2ca:	6b 01       	movw	r12, r22
 2cc:	7c 01       	movw	r14, r24
    0
*/
	int8_t i = 0;
	uint8_t num_arr[10];
	
	if(num == 0) LCD_write_char('0');
 2ce:	67 2b       	or	r22, r23
 2d0:	68 2b       	or	r22, r24
 2d2:	69 2b       	or	r22, r25
 2d4:	19 f4       	brne	.+6      	; 0x2dc <LCD_write_num+0x30>
 2d6:	80 e3       	ldi	r24, 0x30	; 48
 2d8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_write_char>
		i++;
	}
}

void LCD_write_num(uint32_t num)
{
 2dc:	10 e0       	ldi	r17, 0x00	; 0
 2de:	17 c0       	rjmp	.+46     	; 0x30e <LCD_write_num+0x62>
	if(num == 0) LCD_write_char('0');
	
	for(i = 0; num != 0 ;i++)
	{
		// + 48  to convert decimal number into ASCII
		num_arr[i] = num % 10 + 48;
 2e0:	c7 01       	movw	r24, r14
 2e2:	b6 01       	movw	r22, r12
 2e4:	2a e0       	ldi	r18, 0x0A	; 10
 2e6:	30 e0       	ldi	r19, 0x00	; 0
 2e8:	40 e0       	ldi	r20, 0x00	; 0
 2ea:	50 e0       	ldi	r21, 0x00	; 0
 2ec:	0e 94 ce 01 	call	0x39c	; 0x39c <__udivmodsi4>
 2f0:	e1 e0       	ldi	r30, 0x01	; 1
 2f2:	f0 e0       	ldi	r31, 0x00	; 0
 2f4:	ec 0f       	add	r30, r28
 2f6:	fd 1f       	adc	r31, r29
 2f8:	e1 0f       	add	r30, r17
 2fa:	f1 1d       	adc	r31, r1
 2fc:	17 fd       	sbrc	r17, 7
 2fe:	fa 95       	dec	r31
 300:	60 5d       	subi	r22, 0xD0	; 208
 302:	60 83       	st	Z, r22
		num /= 10;
 304:	c2 2e       	mov	r12, r18
 306:	d3 2e       	mov	r13, r19
 308:	e4 2e       	mov	r14, r20
 30a:	f5 2e       	mov	r15, r21
	int8_t i = 0;
	uint8_t num_arr[10];
	
	if(num == 0) LCD_write_char('0');
	
	for(i = 0; num != 0 ;i++)
 30c:	1f 5f       	subi	r17, 0xFF	; 255
 30e:	c1 14       	cp	r12, r1
 310:	d1 04       	cpc	r13, r1
 312:	e1 04       	cpc	r14, r1
 314:	f1 04       	cpc	r15, r1
 316:	21 f7       	brne	.-56     	; 0x2e0 <LCD_write_num+0x34>
		// + 48  to convert decimal number into ASCII
		num_arr[i] = num % 10 + 48;
		num /= 10;
	}
	
	i--;
 318:	11 50       	subi	r17, 0x01	; 1
	while (i >= 0)
 31a:	0c c0       	rjmp	.+24     	; 0x334 <LCD_write_num+0x88>
	{
		LCD_write_char(num_arr[i]);
 31c:	e1 e0       	ldi	r30, 0x01	; 1
 31e:	f0 e0       	ldi	r31, 0x00	; 0
 320:	ec 0f       	add	r30, r28
 322:	fd 1f       	adc	r31, r29
 324:	e1 0f       	add	r30, r17
 326:	f1 1d       	adc	r31, r1
 328:	17 fd       	sbrc	r17, 7
 32a:	fa 95       	dec	r31
 32c:	80 81       	ld	r24, Z
 32e:	0e 94 e6 00 	call	0x1cc	; 0x1cc <LCD_write_char>
		i--;
 332:	11 50       	subi	r17, 0x01	; 1
		num_arr[i] = num % 10 + 48;
		num /= 10;
	}
	
	i--;
	while (i >= 0)
 334:	11 23       	and	r17, r17
 336:	94 f7       	brge	.-28     	; 0x31c <LCD_write_num+0x70>
	{
		LCD_write_char(num_arr[i]);
		i--;
	}
 338:	2a 96       	adiw	r28, 0x0a	; 10
 33a:	0f b6       	in	r0, 0x3f	; 63
 33c:	f8 94       	cli
 33e:	de bf       	out	0x3e, r29	; 62
 340:	0f be       	out	0x3f, r0	; 63
 342:	cd bf       	out	0x3d, r28	; 61
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	1f 91       	pop	r17
 34a:	ff 90       	pop	r15
 34c:	ef 90       	pop	r14
 34e:	df 90       	pop	r13
 350:	cf 90       	pop	r12
 352:	08 95       	ret

00000354 <main>:

int main(void)
{
	
	// initialize LCD
	LCD_init();
 354:	0e 94 a6 00 	call	0x14c	; 0x14c <LCD_init>
	uint8_t i = 0;
	
	WDT_on();
 358:	0e 94 c7 01 	call	0x38e	; 0x38e <WDT_on>
int main(void)
{
	
	// initialize LCD
	LCD_init();
	uint8_t i = 0;
 35c:	c0 e0       	ldi	r28, 0x00	; 0
	WDT_on();
	
	
	while (1)
	{
		LCD_write_command(0x1);
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	0e 94 36 00 	call	0x6c	; 0x6c <LCD_write_command>
		LCD_write_num(i++);
 364:	d1 e0       	ldi	r29, 0x01	; 1
 366:	dc 0f       	add	r29, r28
 368:	6c 2f       	mov	r22, r28
 36a:	70 e0       	ldi	r23, 0x00	; 0
 36c:	80 e0       	ldi	r24, 0x00	; 0
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	0e 94 56 01 	call	0x2ac	; 0x2ac <LCD_write_num>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 374:	2f ef       	ldi	r18, 0xFF	; 255
 376:	85 eb       	ldi	r24, 0xB5	; 181
 378:	95 e3       	ldi	r25, 0x35	; 53
 37a:	21 50       	subi	r18, 0x01	; 1
 37c:	80 40       	sbci	r24, 0x00	; 0
 37e:	90 40       	sbci	r25, 0x00	; 0
 380:	e1 f7       	brne	.-8      	; 0x37a <main+0x26>
 382:	00 c0       	rjmp	.+0      	; 0x384 <main+0x30>
 384:	00 00       	nop
		_delay_ms(1100);
		
		WDT_off();
 386:	0e 94 ca 01 	call	0x394	; 0x394 <WDT_off>
	
	
	while (1)
	{
		LCD_write_command(0x1);
		LCD_write_num(i++);
 38a:	cd 2f       	mov	r28, r29
 38c:	e8 cf       	rjmp	.-48     	; 0x35e <main+0xa>

0000038e <WDT_on>:
{
	/*
	Watchdog timer enables with typical timeout period 1 second.
	WDP2, WDP1, WDP0: Watchdog Timer prescaler 	WDP2 = 1	 WDP1 = 1	 WDP0 = 0
	*/
	WDTCR = (1<<WDE)|(1<<WDP2)|(1<<WDP1);
 38e:	8e e0       	ldi	r24, 0x0E	; 14
 390:	81 bd       	out	0x21, r24	; 33
 392:	08 95       	ret

00000394 <WDT_off>:
{
	/*
	This function use for disable the watchdog timer.
	
	*/
	WDTCR = 1<<WDTOE | 1<< WDE;
 394:	88 e1       	ldi	r24, 0x18	; 24
 396:	81 bd       	out	0x21, r24	; 33
	WDTCR = 0;
 398:	11 bc       	out	0x21, r1	; 33
 39a:	08 95       	ret

0000039c <__udivmodsi4>:
 39c:	a1 e2       	ldi	r26, 0x21	; 33
 39e:	1a 2e       	mov	r1, r26
 3a0:	aa 1b       	sub	r26, r26
 3a2:	bb 1b       	sub	r27, r27
 3a4:	fd 01       	movw	r30, r26
 3a6:	0d c0       	rjmp	.+26     	; 0x3c2 <__udivmodsi4_ep>

000003a8 <__udivmodsi4_loop>:
 3a8:	aa 1f       	adc	r26, r26
 3aa:	bb 1f       	adc	r27, r27
 3ac:	ee 1f       	adc	r30, r30
 3ae:	ff 1f       	adc	r31, r31
 3b0:	a2 17       	cp	r26, r18
 3b2:	b3 07       	cpc	r27, r19
 3b4:	e4 07       	cpc	r30, r20
 3b6:	f5 07       	cpc	r31, r21
 3b8:	20 f0       	brcs	.+8      	; 0x3c2 <__udivmodsi4_ep>
 3ba:	a2 1b       	sub	r26, r18
 3bc:	b3 0b       	sbc	r27, r19
 3be:	e4 0b       	sbc	r30, r20
 3c0:	f5 0b       	sbc	r31, r21

000003c2 <__udivmodsi4_ep>:
 3c2:	66 1f       	adc	r22, r22
 3c4:	77 1f       	adc	r23, r23
 3c6:	88 1f       	adc	r24, r24
 3c8:	99 1f       	adc	r25, r25
 3ca:	1a 94       	dec	r1
 3cc:	69 f7       	brne	.-38     	; 0x3a8 <__udivmodsi4_loop>
 3ce:	60 95       	com	r22
 3d0:	70 95       	com	r23
 3d2:	80 95       	com	r24
 3d4:	90 95       	com	r25
 3d6:	9b 01       	movw	r18, r22
 3d8:	ac 01       	movw	r20, r24
 3da:	bd 01       	movw	r22, r26
 3dc:	cf 01       	movw	r24, r30
 3de:	08 95       	ret

000003e0 <_exit>:
 3e0:	f8 94       	cli

000003e2 <__stop_program>:
 3e2:	ff cf       	rjmp	.-2      	; 0x3e2 <__stop_program>
