
Section_5_Timer_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006b6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000006b6  0000072a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000073a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000076c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000b0  00000000  00000000  000007a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d08  00000000  00000000  00000858  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000007b8  00000000  00000000  00001560  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000008be  00000000  00000000  00001d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000012c  00000000  00000000  000025d8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000495  00000000  00000000  00002704  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000005db  00000000  00000000  00002b99  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00003174  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 eb       	ldi	r30, 0xB6	; 182
  68:	f6 e0       	ldi	r31, 0x06	; 6
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 c8 01 	call	0x390	; 0x390 <main>
  7a:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <LCD_write_command>:
  82:	9b b3       	in	r25, 0x1b	; 27
  84:	97 7f       	andi	r25, 0xF7	; 247
  86:	9b bb       	out	0x1b, r25	; 27
  88:	88 23       	and	r24, r24
  8a:	24 f0       	brlt	.+8      	; 0x94 <LCD_write_command+0x12>
  8c:	9b b3       	in	r25, 0x1b	; 27
  8e:	9f 77       	andi	r25, 0x7F	; 127
  90:	9b bb       	out	0x1b, r25	; 27
  92:	03 c0       	rjmp	.+6      	; 0x9a <LCD_write_command+0x18>
  94:	9b b3       	in	r25, 0x1b	; 27
  96:	90 68       	ori	r25, 0x80	; 128
  98:	9b bb       	out	0x1b, r25	; 27
  9a:	86 fd       	sbrc	r24, 6
  9c:	04 c0       	rjmp	.+8      	; 0xa6 <LCD_write_command+0x24>
  9e:	9b b3       	in	r25, 0x1b	; 27
  a0:	9f 7b       	andi	r25, 0xBF	; 191
  a2:	9b bb       	out	0x1b, r25	; 27
  a4:	03 c0       	rjmp	.+6      	; 0xac <LCD_write_command+0x2a>
  a6:	9b b3       	in	r25, 0x1b	; 27
  a8:	90 64       	ori	r25, 0x40	; 64
  aa:	9b bb       	out	0x1b, r25	; 27
  ac:	85 fd       	sbrc	r24, 5
  ae:	04 c0       	rjmp	.+8      	; 0xb8 <LCD_write_command+0x36>
  b0:	9b b3       	in	r25, 0x1b	; 27
  b2:	9f 7d       	andi	r25, 0xDF	; 223
  b4:	9b bb       	out	0x1b, r25	; 27
  b6:	03 c0       	rjmp	.+6      	; 0xbe <LCD_write_command+0x3c>
  b8:	9b b3       	in	r25, 0x1b	; 27
  ba:	90 62       	ori	r25, 0x20	; 32
  bc:	9b bb       	out	0x1b, r25	; 27
  be:	84 fd       	sbrc	r24, 4
  c0:	04 c0       	rjmp	.+8      	; 0xca <LCD_write_command+0x48>
  c2:	9b b3       	in	r25, 0x1b	; 27
  c4:	9f 7e       	andi	r25, 0xEF	; 239
  c6:	9b bb       	out	0x1b, r25	; 27
  c8:	03 c0       	rjmp	.+6      	; 0xd0 <LCD_write_command+0x4e>
  ca:	9b b3       	in	r25, 0x1b	; 27
  cc:	90 61       	ori	r25, 0x10	; 16
  ce:	9b bb       	out	0x1b, r25	; 27
  d0:	9b b3       	in	r25, 0x1b	; 27
  d2:	94 60       	ori	r25, 0x04	; 4
  d4:	9b bb       	out	0x1b, r25	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	ef e9       	ldi	r30, 0x9F	; 159
  d8:	ff e0       	ldi	r31, 0x0F	; 15
  da:	31 97       	sbiw	r30, 0x01	; 1
  dc:	f1 f7       	brne	.-4      	; 0xda <LCD_write_command+0x58>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <LCD_write_command+0x5e>
  e0:	00 00       	nop
  e2:	9b b3       	in	r25, 0x1b	; 27
  e4:	9b 7f       	andi	r25, 0xFB	; 251
  e6:	9b bb       	out	0x1b, r25	; 27
  e8:	ef e9       	ldi	r30, 0x9F	; 159
  ea:	ff e0       	ldi	r31, 0x0F	; 15
  ec:	31 97       	sbiw	r30, 0x01	; 1
  ee:	f1 f7       	brne	.-4      	; 0xec <LCD_write_command+0x6a>
  f0:	00 c0       	rjmp	.+0      	; 0xf2 <LCD_write_command+0x70>
  f2:	00 00       	nop
  f4:	83 fd       	sbrc	r24, 3
  f6:	04 c0       	rjmp	.+8      	; 0x100 <LCD_write_command+0x7e>
  f8:	9b b3       	in	r25, 0x1b	; 27
  fa:	9f 77       	andi	r25, 0x7F	; 127
  fc:	9b bb       	out	0x1b, r25	; 27
  fe:	03 c0       	rjmp	.+6      	; 0x106 <LCD_write_command+0x84>
 100:	9b b3       	in	r25, 0x1b	; 27
 102:	90 68       	ori	r25, 0x80	; 128
 104:	9b bb       	out	0x1b, r25	; 27
 106:	82 fd       	sbrc	r24, 2
 108:	04 c0       	rjmp	.+8      	; 0x112 <LCD_write_command+0x90>
 10a:	9b b3       	in	r25, 0x1b	; 27
 10c:	9f 7b       	andi	r25, 0xBF	; 191
 10e:	9b bb       	out	0x1b, r25	; 27
 110:	03 c0       	rjmp	.+6      	; 0x118 <LCD_write_command+0x96>
 112:	9b b3       	in	r25, 0x1b	; 27
 114:	90 64       	ori	r25, 0x40	; 64
 116:	9b bb       	out	0x1b, r25	; 27
 118:	81 fd       	sbrc	r24, 1
 11a:	04 c0       	rjmp	.+8      	; 0x124 <LCD_write_command+0xa2>
 11c:	9b b3       	in	r25, 0x1b	; 27
 11e:	9f 7d       	andi	r25, 0xDF	; 223
 120:	9b bb       	out	0x1b, r25	; 27
 122:	03 c0       	rjmp	.+6      	; 0x12a <LCD_write_command+0xa8>
 124:	9b b3       	in	r25, 0x1b	; 27
 126:	90 62       	ori	r25, 0x20	; 32
 128:	9b bb       	out	0x1b, r25	; 27
 12a:	80 fd       	sbrc	r24, 0
 12c:	04 c0       	rjmp	.+8      	; 0x136 <LCD_write_command+0xb4>
 12e:	8b b3       	in	r24, 0x1b	; 27
 130:	8f 7e       	andi	r24, 0xEF	; 239
 132:	8b bb       	out	0x1b, r24	; 27
 134:	03 c0       	rjmp	.+6      	; 0x13c <LCD_write_command+0xba>
 136:	8b b3       	in	r24, 0x1b	; 27
 138:	80 61       	ori	r24, 0x10	; 16
 13a:	8b bb       	out	0x1b, r24	; 27
 13c:	8b b3       	in	r24, 0x1b	; 27
 13e:	84 60       	ori	r24, 0x04	; 4
 140:	8b bb       	out	0x1b, r24	; 27
 142:	8f e9       	ldi	r24, 0x9F	; 159
 144:	9f e0       	ldi	r25, 0x0F	; 15
 146:	01 97       	sbiw	r24, 0x01	; 1
 148:	f1 f7       	brne	.-4      	; 0x146 <LCD_write_command+0xc4>
 14a:	00 c0       	rjmp	.+0      	; 0x14c <LCD_write_command+0xca>
 14c:	00 00       	nop
 14e:	8b b3       	in	r24, 0x1b	; 27
 150:	8b 7f       	andi	r24, 0xFB	; 251
 152:	8b bb       	out	0x1b, r24	; 27
 154:	ef e9       	ldi	r30, 0x9F	; 159
 156:	ff e0       	ldi	r31, 0x0F	; 15
 158:	31 97       	sbiw	r30, 0x01	; 1
 15a:	f1 f7       	brne	.-4      	; 0x158 <LCD_write_command+0xd6>
 15c:	00 c0       	rjmp	.+0      	; 0x15e <LCD_write_command+0xdc>
 15e:	00 00       	nop
 160:	08 95       	ret

00000162 <LCD_init>:
 162:	8a b3       	in	r24, 0x1a	; 26
 164:	8c 6f       	ori	r24, 0xFC	; 252
 166:	8a bb       	out	0x1a, r24	; 26
 168:	8b b3       	in	r24, 0x1b	; 27
 16a:	83 70       	andi	r24, 0x03	; 3
 16c:	8b bb       	out	0x1b, r24	; 27
 16e:	83 e0       	ldi	r24, 0x03	; 3
 170:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 174:	8f e7       	ldi	r24, 0x7F	; 127
 176:	9e e3       	ldi	r25, 0x3E	; 62
 178:	01 97       	sbiw	r24, 0x01	; 1
 17a:	f1 f7       	brne	.-4      	; 0x178 <LCD_init+0x16>
 17c:	00 c0       	rjmp	.+0      	; 0x17e <LCD_init+0x1c>
 17e:	00 00       	nop
 180:	83 e0       	ldi	r24, 0x03	; 3
 182:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 186:	8f e7       	ldi	r24, 0x7F	; 127
 188:	9e e3       	ldi	r25, 0x3E	; 62
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <LCD_init+0x28>
 18e:	00 c0       	rjmp	.+0      	; 0x190 <LCD_init+0x2e>
 190:	00 00       	nop
 192:	83 e0       	ldi	r24, 0x03	; 3
 194:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 198:	8f e7       	ldi	r24, 0x7F	; 127
 19a:	9e e3       	ldi	r25, 0x3E	; 62
 19c:	01 97       	sbiw	r24, 0x01	; 1
 19e:	f1 f7       	brne	.-4      	; 0x19c <LCD_init+0x3a>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <LCD_init+0x40>
 1a2:	00 00       	nop
 1a4:	82 e0       	ldi	r24, 0x02	; 2
 1a6:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1aa:	88 e2       	ldi	r24, 0x28	; 40
 1ac:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1b0:	88 e0       	ldi	r24, 0x08	; 8
 1b2:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1bc:	86 e0       	ldi	r24, 0x06	; 6
 1be:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1c2:	81 e0       	ldi	r24, 0x01	; 1
 1c4:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1c8:	8c e0       	ldi	r24, 0x0C	; 12
 1ca:	0e 94 41 00 	call	0x82	; 0x82 <LCD_write_command>
 1ce:	9f ef       	ldi	r25, 0xFF	; 255
 1d0:	29 ef       	ldi	r18, 0xF9	; 249
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	91 50       	subi	r25, 0x01	; 1
 1d6:	20 40       	sbci	r18, 0x00	; 0
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	e1 f7       	brne	.-8      	; 0x1d4 <LCD_init+0x72>
 1dc:	00 c0       	rjmp	.+0      	; 0x1de <LCD_init+0x7c>
 1de:	00 00       	nop
 1e0:	08 95       	ret

000001e2 <LCD_write_char>:
 1e2:	9b b3       	in	r25, 0x1b	; 27
 1e4:	98 60       	ori	r25, 0x08	; 8
 1e6:	9b bb       	out	0x1b, r25	; 27
 1e8:	88 23       	and	r24, r24
 1ea:	24 f0       	brlt	.+8      	; 0x1f4 <LCD_write_char+0x12>
 1ec:	9b b3       	in	r25, 0x1b	; 27
 1ee:	9f 77       	andi	r25, 0x7F	; 127
 1f0:	9b bb       	out	0x1b, r25	; 27
 1f2:	03 c0       	rjmp	.+6      	; 0x1fa <LCD_write_char+0x18>
 1f4:	9b b3       	in	r25, 0x1b	; 27
 1f6:	90 68       	ori	r25, 0x80	; 128
 1f8:	9b bb       	out	0x1b, r25	; 27
 1fa:	86 fd       	sbrc	r24, 6
 1fc:	04 c0       	rjmp	.+8      	; 0x206 <LCD_write_char+0x24>
 1fe:	9b b3       	in	r25, 0x1b	; 27
 200:	9f 7b       	andi	r25, 0xBF	; 191
 202:	9b bb       	out	0x1b, r25	; 27
 204:	03 c0       	rjmp	.+6      	; 0x20c <LCD_write_char+0x2a>
 206:	9b b3       	in	r25, 0x1b	; 27
 208:	90 64       	ori	r25, 0x40	; 64
 20a:	9b bb       	out	0x1b, r25	; 27
 20c:	85 fd       	sbrc	r24, 5
 20e:	04 c0       	rjmp	.+8      	; 0x218 <LCD_write_char+0x36>
 210:	9b b3       	in	r25, 0x1b	; 27
 212:	9f 7d       	andi	r25, 0xDF	; 223
 214:	9b bb       	out	0x1b, r25	; 27
 216:	03 c0       	rjmp	.+6      	; 0x21e <LCD_write_char+0x3c>
 218:	9b b3       	in	r25, 0x1b	; 27
 21a:	90 62       	ori	r25, 0x20	; 32
 21c:	9b bb       	out	0x1b, r25	; 27
 21e:	84 fd       	sbrc	r24, 4
 220:	04 c0       	rjmp	.+8      	; 0x22a <LCD_write_char+0x48>
 222:	9b b3       	in	r25, 0x1b	; 27
 224:	9f 7e       	andi	r25, 0xEF	; 239
 226:	9b bb       	out	0x1b, r25	; 27
 228:	03 c0       	rjmp	.+6      	; 0x230 <LCD_write_char+0x4e>
 22a:	9b b3       	in	r25, 0x1b	; 27
 22c:	90 61       	ori	r25, 0x10	; 16
 22e:	9b bb       	out	0x1b, r25	; 27
 230:	9b b3       	in	r25, 0x1b	; 27
 232:	94 60       	ori	r25, 0x04	; 4
 234:	9b bb       	out	0x1b, r25	; 27
 236:	ef e9       	ldi	r30, 0x9F	; 159
 238:	ff e0       	ldi	r31, 0x0F	; 15
 23a:	31 97       	sbiw	r30, 0x01	; 1
 23c:	f1 f7       	brne	.-4      	; 0x23a <LCD_write_char+0x58>
 23e:	00 c0       	rjmp	.+0      	; 0x240 <LCD_write_char+0x5e>
 240:	00 00       	nop
 242:	9b b3       	in	r25, 0x1b	; 27
 244:	9b 7f       	andi	r25, 0xFB	; 251
 246:	9b bb       	out	0x1b, r25	; 27
 248:	ef e9       	ldi	r30, 0x9F	; 159
 24a:	ff e0       	ldi	r31, 0x0F	; 15
 24c:	31 97       	sbiw	r30, 0x01	; 1
 24e:	f1 f7       	brne	.-4      	; 0x24c <LCD_write_char+0x6a>
 250:	00 c0       	rjmp	.+0      	; 0x252 <LCD_write_char+0x70>
 252:	00 00       	nop
 254:	83 fd       	sbrc	r24, 3
 256:	04 c0       	rjmp	.+8      	; 0x260 <LCD_write_char+0x7e>
 258:	9b b3       	in	r25, 0x1b	; 27
 25a:	9f 77       	andi	r25, 0x7F	; 127
 25c:	9b bb       	out	0x1b, r25	; 27
 25e:	03 c0       	rjmp	.+6      	; 0x266 <LCD_write_char+0x84>
 260:	9b b3       	in	r25, 0x1b	; 27
 262:	90 68       	ori	r25, 0x80	; 128
 264:	9b bb       	out	0x1b, r25	; 27
 266:	82 fd       	sbrc	r24, 2
 268:	04 c0       	rjmp	.+8      	; 0x272 <LCD_write_char+0x90>
 26a:	9b b3       	in	r25, 0x1b	; 27
 26c:	9f 7b       	andi	r25, 0xBF	; 191
 26e:	9b bb       	out	0x1b, r25	; 27
 270:	03 c0       	rjmp	.+6      	; 0x278 <LCD_write_char+0x96>
 272:	9b b3       	in	r25, 0x1b	; 27
 274:	90 64       	ori	r25, 0x40	; 64
 276:	9b bb       	out	0x1b, r25	; 27
 278:	81 fd       	sbrc	r24, 1
 27a:	04 c0       	rjmp	.+8      	; 0x284 <LCD_write_char+0xa2>
 27c:	9b b3       	in	r25, 0x1b	; 27
 27e:	9f 7d       	andi	r25, 0xDF	; 223
 280:	9b bb       	out	0x1b, r25	; 27
 282:	03 c0       	rjmp	.+6      	; 0x28a <LCD_write_char+0xa8>
 284:	9b b3       	in	r25, 0x1b	; 27
 286:	90 62       	ori	r25, 0x20	; 32
 288:	9b bb       	out	0x1b, r25	; 27
 28a:	80 fd       	sbrc	r24, 0
 28c:	04 c0       	rjmp	.+8      	; 0x296 <LCD_write_char+0xb4>
 28e:	8b b3       	in	r24, 0x1b	; 27
 290:	8f 7e       	andi	r24, 0xEF	; 239
 292:	8b bb       	out	0x1b, r24	; 27
 294:	03 c0       	rjmp	.+6      	; 0x29c <LCD_write_char+0xba>
 296:	8b b3       	in	r24, 0x1b	; 27
 298:	80 61       	ori	r24, 0x10	; 16
 29a:	8b bb       	out	0x1b, r24	; 27
 29c:	8b b3       	in	r24, 0x1b	; 27
 29e:	84 60       	ori	r24, 0x04	; 4
 2a0:	8b bb       	out	0x1b, r24	; 27
 2a2:	8f e9       	ldi	r24, 0x9F	; 159
 2a4:	9f e0       	ldi	r25, 0x0F	; 15
 2a6:	01 97       	sbiw	r24, 0x01	; 1
 2a8:	f1 f7       	brne	.-4      	; 0x2a6 <LCD_write_char+0xc4>
 2aa:	00 c0       	rjmp	.+0      	; 0x2ac <LCD_write_char+0xca>
 2ac:	00 00       	nop
 2ae:	8b b3       	in	r24, 0x1b	; 27
 2b0:	8b 7f       	andi	r24, 0xFB	; 251
 2b2:	8b bb       	out	0x1b, r24	; 27
 2b4:	ef e9       	ldi	r30, 0x9F	; 159
 2b6:	ff e0       	ldi	r31, 0x0F	; 15
 2b8:	31 97       	sbiw	r30, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <LCD_write_char+0xd6>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <LCD_write_char+0xdc>
 2be:	00 00       	nop
 2c0:	08 95       	ret

000002c2 <LCD_write_string>:
 2c2:	0f 93       	push	r16
 2c4:	1f 93       	push	r17
 2c6:	cf 93       	push	r28
 2c8:	8c 01       	movw	r16, r24
 2ca:	c0 e0       	ldi	r28, 0x00	; 0
 2cc:	03 c0       	rjmp	.+6      	; 0x2d4 <LCD_write_string+0x12>
 2ce:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCD_write_char>
 2d2:	cf 5f       	subi	r28, 0xFF	; 255
 2d4:	f8 01       	movw	r30, r16
 2d6:	ec 0f       	add	r30, r28
 2d8:	f1 1d       	adc	r31, r1
 2da:	80 81       	ld	r24, Z
 2dc:	81 11       	cpse	r24, r1
 2de:	f7 cf       	rjmp	.-18     	; 0x2ce <LCD_write_string+0xc>
 2e0:	cf 91       	pop	r28
 2e2:	1f 91       	pop	r17
 2e4:	0f 91       	pop	r16
 2e6:	08 95       	ret

000002e8 <LCD_write_num>:
 2e8:	cf 92       	push	r12
 2ea:	df 92       	push	r13
 2ec:	ef 92       	push	r14
 2ee:	ff 92       	push	r15
 2f0:	1f 93       	push	r17
 2f2:	cf 93       	push	r28
 2f4:	df 93       	push	r29
 2f6:	cd b7       	in	r28, 0x3d	; 61
 2f8:	de b7       	in	r29, 0x3e	; 62
 2fa:	2a 97       	sbiw	r28, 0x0a	; 10
 2fc:	0f b6       	in	r0, 0x3f	; 63
 2fe:	f8 94       	cli
 300:	de bf       	out	0x3e, r29	; 62
 302:	0f be       	out	0x3f, r0	; 63
 304:	cd bf       	out	0x3d, r28	; 61
 306:	6b 01       	movw	r12, r22
 308:	7c 01       	movw	r14, r24
 30a:	67 2b       	or	r22, r23
 30c:	68 2b       	or	r22, r24
 30e:	69 2b       	or	r22, r25
 310:	19 f4       	brne	.+6      	; 0x318 <LCD_write_num+0x30>
 312:	80 e3       	ldi	r24, 0x30	; 48
 314:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCD_write_char>
 318:	10 e0       	ldi	r17, 0x00	; 0
 31a:	17 c0       	rjmp	.+46     	; 0x34a <LCD_write_num+0x62>
 31c:	c7 01       	movw	r24, r14
 31e:	b6 01       	movw	r22, r12
 320:	2a e0       	ldi	r18, 0x0A	; 10
 322:	30 e0       	ldi	r19, 0x00	; 0
 324:	40 e0       	ldi	r20, 0x00	; 0
 326:	50 e0       	ldi	r21, 0x00	; 0
 328:	0e 94 37 03 	call	0x66e	; 0x66e <__udivmodsi4>
 32c:	e1 e0       	ldi	r30, 0x01	; 1
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	ec 0f       	add	r30, r28
 332:	fd 1f       	adc	r31, r29
 334:	e1 0f       	add	r30, r17
 336:	f1 1d       	adc	r31, r1
 338:	17 fd       	sbrc	r17, 7
 33a:	fa 95       	dec	r31
 33c:	60 5d       	subi	r22, 0xD0	; 208
 33e:	60 83       	st	Z, r22
 340:	c2 2e       	mov	r12, r18
 342:	d3 2e       	mov	r13, r19
 344:	e4 2e       	mov	r14, r20
 346:	f5 2e       	mov	r15, r21
 348:	1f 5f       	subi	r17, 0xFF	; 255
 34a:	c1 14       	cp	r12, r1
 34c:	d1 04       	cpc	r13, r1
 34e:	e1 04       	cpc	r14, r1
 350:	f1 04       	cpc	r15, r1
 352:	21 f7       	brne	.-56     	; 0x31c <LCD_write_num+0x34>
 354:	11 50       	subi	r17, 0x01	; 1
 356:	0c c0       	rjmp	.+24     	; 0x370 <LCD_write_num+0x88>
 358:	e1 e0       	ldi	r30, 0x01	; 1
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	ec 0f       	add	r30, r28
 35e:	fd 1f       	adc	r31, r29
 360:	e1 0f       	add	r30, r17
 362:	f1 1d       	adc	r31, r1
 364:	17 fd       	sbrc	r17, 7
 366:	fa 95       	dec	r31
 368:	80 81       	ld	r24, Z
 36a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <LCD_write_char>
 36e:	11 50       	subi	r17, 0x01	; 1
 370:	11 23       	and	r17, r17
 372:	94 f7       	brge	.-28     	; 0x358 <LCD_write_num+0x70>
 374:	2a 96       	adiw	r28, 0x0a	; 10
 376:	0f b6       	in	r0, 0x3f	; 63
 378:	f8 94       	cli
 37a:	de bf       	out	0x3e, r29	; 62
 37c:	0f be       	out	0x3f, r0	; 63
 37e:	cd bf       	out	0x3d, r28	; 61
 380:	df 91       	pop	r29
 382:	cf 91       	pop	r28
 384:	1f 91       	pop	r17
 386:	ff 90       	pop	r15
 388:	ef 90       	pop	r14
 38a:	df 90       	pop	r13
 38c:	cf 90       	pop	r12
 38e:	08 95       	ret

00000390 <main>:

int main(void)
{
	
	// initialize LCD
	LCD_init();
 390:	0e 94 b1 00 	call	0x162	; 0x162 <LCD_init>
	// maximum frequency at OC) = 31.25 Khz
	timer0_FG_init(200);
 394:	88 ec       	ldi	r24, 0xC8	; 200
 396:	0e 94 de 01 	call	0x3bc	; 0x3bc <timer0_FG_init>
	uint16_t period = timer1_ICU_capture();
 39a:	0e 94 e6 01 	call	0x3cc	; 0x3cc <timer1_ICU_capture>
 39e:	ec 01       	movw	r28, r24
	LCD_write_string("Preiod = ");
 3a0:	80 e6       	ldi	r24, 0x60	; 96
 3a2:	90 e0       	ldi	r25, 0x00	; 0
 3a4:	0e 94 61 01 	call	0x2c2	; 0x2c2 <LCD_write_string>
	LCD_write_num(period);
 3a8:	be 01       	movw	r22, r28
 3aa:	80 e0       	ldi	r24, 0x00	; 0
 3ac:	90 e0       	ldi	r25, 0x00	; 0
 3ae:	0e 94 74 01 	call	0x2e8	; 0x2e8 <LCD_write_num>
	LCD_write_string(" usec");
 3b2:	8a e6       	ldi	r24, 0x6A	; 106
 3b4:	90 e0       	ldi	r25, 0x00	; 0
 3b6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <LCD_write_string>
 3ba:	ff cf       	rjmp	.-2      	; 0x3ba <main+0x2a>

000003bc <timer0_FG_init>:


void timer0_FG_init(uint8_t value)
{
	// configure OC0 pin output
	SETBIT(DDRB,3);
 3bc:	97 b3       	in	r25, 0x17	; 23
 3be:	98 60       	ori	r25, 0x08	; 8
 3c0:	97 bb       	out	0x17, r25	; 23
	
	// enable FG mode with 1024 prescaler
	// CTC : WGM00 = 0		WGM01 = 1
	// 1024 prescaler : CS00 = 1		CS01 = 0	CS02 = 0
	// Toggle on compare match : COM00 = 1		COM01 = 0
	TCCR0 |= (1<<CS00)  | (1<<WGM01) | (1<<COM00);
 3c2:	93 b7       	in	r25, 0x33	; 51
 3c4:	99 61       	ori	r25, 0x19	; 25
 3c6:	93 bf       	out	0x33, r25	; 51
		
	OCR0 = value;
 3c8:	8c bf       	out	0x3c, r24	; 60
 3ca:	08 95       	ret

000003cc <timer1_ICU_capture>:

uint16_t timer1_ICU_capture(void)
{
	uint16_t t1,t2;
	// Control Register A: enable CTC mode		WGM11 = 0		WGM10 = 0      
	TCCR1A = 0;
 3cc:	1f bc       	out	0x2f, r1	; 47
	
	// Control Register B:		No prescaler 
	// Control Register B:		Input Capture Edge Select (0 falling edge - 1 rising edge)
	TCCR1B |= 1<<CS00 | 1<<ICES1;
 3ce:	8e b5       	in	r24, 0x2e	; 46
 3d0:	81 64       	ori	r24, 0x41	; 65
 3d2:	8e bd       	out	0x2e, r24	; 46
	
	// Interrupt Flag Register (TIFR) : set Input Capture Flag (ICF1) to clear interrupt flag
	// Note : ICF1 is automatically cleared when the Input Capture Interrupt Vector is executed. 
	//		  Alternatively, ICF1 can be cleared by writing a logic one to its bit location.
	TIFR |= 1<<ICF1;
 3d4:	88 b7       	in	r24, 0x38	; 56
 3d6:	80 62       	ori	r24, 0x20	; 32
 3d8:	88 bf       	out	0x38, r24	; 56
	
	while(READBIT(TIFR,ICF1) == 0); // wait until first rising edge detect
 3da:	08 b6       	in	r0, 0x38	; 56
 3dc:	05 fe       	sbrs	r0, 5
 3de:	fd cf       	rjmp	.-6      	; 0x3da <timer1_ICU_capture+0xe>
	t1 = ICR1;                      // store value of first rising edge from Input Capture Register (ICR = 16bit)
 3e0:	26 b5       	in	r18, 0x26	; 38
 3e2:	37 b5       	in	r19, 0x27	; 39
	TIFR |= 1<<ICF1;                // clear IC flag
 3e4:	88 b7       	in	r24, 0x38	; 56
 3e6:	80 62       	ori	r24, 0x20	; 32
 3e8:	88 bf       	out	0x38, r24	; 56

	while(READBIT(TIFR,ICF1) == 0); // wait until first rising edge detect
 3ea:	08 b6       	in	r0, 0x38	; 56
 3ec:	05 fe       	sbrs	r0, 5
 3ee:	fd cf       	rjmp	.-6      	; 0x3ea <timer1_ICU_capture+0x1e>
	t2 = ICR1;                      // store value of second rising edge from Input Capture Register (ICR = 16bit)
 3f0:	66 b5       	in	r22, 0x26	; 38
 3f2:	77 b5       	in	r23, 0x27	; 39
	TIFR |= 1<<ICF1;                // clear IC flag
 3f4:	88 b7       	in	r24, 0x38	; 56
 3f6:	80 62       	ori	r24, 0x20	; 32
 3f8:	88 bf       	out	0x38, r24	; 56
	
	return (t2-t1)/16.0;
 3fa:	62 1b       	sub	r22, r18
 3fc:	73 0b       	sbc	r23, r19
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	90 e0       	ldi	r25, 0x00	; 0
 402:	0e 94 3c 02 	call	0x478	; 0x478 <__floatunsisf>
 406:	20 e0       	ldi	r18, 0x00	; 0
 408:	30 e0       	ldi	r19, 0x00	; 0
 40a:	40 e8       	ldi	r20, 0x80	; 128
 40c:	5d e3       	ldi	r21, 0x3D	; 61
 40e:	0e 94 a2 02 	call	0x544	; 0x544 <__mulsf3>
 412:	0e 94 0d 02 	call	0x41a	; 0x41a <__fixunssfsi>
 416:	cb 01       	movw	r24, r22
 418:	08 95       	ret

0000041a <__fixunssfsi>:
 41a:	0e 94 81 02 	call	0x502	; 0x502 <__fp_splitA>
 41e:	88 f0       	brcs	.+34     	; 0x442 <__fixunssfsi+0x28>
 420:	9f 57       	subi	r25, 0x7F	; 127
 422:	98 f0       	brcs	.+38     	; 0x44a <__fixunssfsi+0x30>
 424:	b9 2f       	mov	r27, r25
 426:	99 27       	eor	r25, r25
 428:	b7 51       	subi	r27, 0x17	; 23
 42a:	b0 f0       	brcs	.+44     	; 0x458 <__fixunssfsi+0x3e>
 42c:	e1 f0       	breq	.+56     	; 0x466 <__fixunssfsi+0x4c>
 42e:	66 0f       	add	r22, r22
 430:	77 1f       	adc	r23, r23
 432:	88 1f       	adc	r24, r24
 434:	99 1f       	adc	r25, r25
 436:	1a f0       	brmi	.+6      	; 0x43e <__fixunssfsi+0x24>
 438:	ba 95       	dec	r27
 43a:	c9 f7       	brne	.-14     	; 0x42e <__fixunssfsi+0x14>
 43c:	14 c0       	rjmp	.+40     	; 0x466 <__fixunssfsi+0x4c>
 43e:	b1 30       	cpi	r27, 0x01	; 1
 440:	91 f0       	breq	.+36     	; 0x466 <__fixunssfsi+0x4c>
 442:	0e 94 9b 02 	call	0x536	; 0x536 <__fp_zero>
 446:	b1 e0       	ldi	r27, 0x01	; 1
 448:	08 95       	ret
 44a:	0c 94 9b 02 	jmp	0x536	; 0x536 <__fp_zero>
 44e:	67 2f       	mov	r22, r23
 450:	78 2f       	mov	r23, r24
 452:	88 27       	eor	r24, r24
 454:	b8 5f       	subi	r27, 0xF8	; 248
 456:	39 f0       	breq	.+14     	; 0x466 <__fixunssfsi+0x4c>
 458:	b9 3f       	cpi	r27, 0xF9	; 249
 45a:	cc f3       	brlt	.-14     	; 0x44e <__fixunssfsi+0x34>
 45c:	86 95       	lsr	r24
 45e:	77 95       	ror	r23
 460:	67 95       	ror	r22
 462:	b3 95       	inc	r27
 464:	d9 f7       	brne	.-10     	; 0x45c <__fixunssfsi+0x42>
 466:	3e f4       	brtc	.+14     	; 0x476 <__fixunssfsi+0x5c>
 468:	90 95       	com	r25
 46a:	80 95       	com	r24
 46c:	70 95       	com	r23
 46e:	61 95       	neg	r22
 470:	7f 4f       	sbci	r23, 0xFF	; 255
 472:	8f 4f       	sbci	r24, 0xFF	; 255
 474:	9f 4f       	sbci	r25, 0xFF	; 255
 476:	08 95       	ret

00000478 <__floatunsisf>:
 478:	e8 94       	clt
 47a:	09 c0       	rjmp	.+18     	; 0x48e <__floatsisf+0x12>

0000047c <__floatsisf>:
 47c:	97 fb       	bst	r25, 7
 47e:	3e f4       	brtc	.+14     	; 0x48e <__floatsisf+0x12>
 480:	90 95       	com	r25
 482:	80 95       	com	r24
 484:	70 95       	com	r23
 486:	61 95       	neg	r22
 488:	7f 4f       	sbci	r23, 0xFF	; 255
 48a:	8f 4f       	sbci	r24, 0xFF	; 255
 48c:	9f 4f       	sbci	r25, 0xFF	; 255
 48e:	99 23       	and	r25, r25
 490:	a9 f0       	breq	.+42     	; 0x4bc <__floatsisf+0x40>
 492:	f9 2f       	mov	r31, r25
 494:	96 e9       	ldi	r25, 0x96	; 150
 496:	bb 27       	eor	r27, r27
 498:	93 95       	inc	r25
 49a:	f6 95       	lsr	r31
 49c:	87 95       	ror	r24
 49e:	77 95       	ror	r23
 4a0:	67 95       	ror	r22
 4a2:	b7 95       	ror	r27
 4a4:	f1 11       	cpse	r31, r1
 4a6:	f8 cf       	rjmp	.-16     	; 0x498 <__floatsisf+0x1c>
 4a8:	fa f4       	brpl	.+62     	; 0x4e8 <__floatsisf+0x6c>
 4aa:	bb 0f       	add	r27, r27
 4ac:	11 f4       	brne	.+4      	; 0x4b2 <__floatsisf+0x36>
 4ae:	60 ff       	sbrs	r22, 0
 4b0:	1b c0       	rjmp	.+54     	; 0x4e8 <__floatsisf+0x6c>
 4b2:	6f 5f       	subi	r22, 0xFF	; 255
 4b4:	7f 4f       	sbci	r23, 0xFF	; 255
 4b6:	8f 4f       	sbci	r24, 0xFF	; 255
 4b8:	9f 4f       	sbci	r25, 0xFF	; 255
 4ba:	16 c0       	rjmp	.+44     	; 0x4e8 <__floatsisf+0x6c>
 4bc:	88 23       	and	r24, r24
 4be:	11 f0       	breq	.+4      	; 0x4c4 <__floatsisf+0x48>
 4c0:	96 e9       	ldi	r25, 0x96	; 150
 4c2:	11 c0       	rjmp	.+34     	; 0x4e6 <__floatsisf+0x6a>
 4c4:	77 23       	and	r23, r23
 4c6:	21 f0       	breq	.+8      	; 0x4d0 <__floatsisf+0x54>
 4c8:	9e e8       	ldi	r25, 0x8E	; 142
 4ca:	87 2f       	mov	r24, r23
 4cc:	76 2f       	mov	r23, r22
 4ce:	05 c0       	rjmp	.+10     	; 0x4da <__floatsisf+0x5e>
 4d0:	66 23       	and	r22, r22
 4d2:	71 f0       	breq	.+28     	; 0x4f0 <__floatsisf+0x74>
 4d4:	96 e8       	ldi	r25, 0x86	; 134
 4d6:	86 2f       	mov	r24, r22
 4d8:	70 e0       	ldi	r23, 0x00	; 0
 4da:	60 e0       	ldi	r22, 0x00	; 0
 4dc:	2a f0       	brmi	.+10     	; 0x4e8 <__floatsisf+0x6c>
 4de:	9a 95       	dec	r25
 4e0:	66 0f       	add	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	da f7       	brpl	.-10     	; 0x4de <__floatsisf+0x62>
 4e8:	88 0f       	add	r24, r24
 4ea:	96 95       	lsr	r25
 4ec:	87 95       	ror	r24
 4ee:	97 f9       	bld	r25, 7
 4f0:	08 95       	ret

000004f2 <__fp_split3>:
 4f2:	57 fd       	sbrc	r21, 7
 4f4:	90 58       	subi	r25, 0x80	; 128
 4f6:	44 0f       	add	r20, r20
 4f8:	55 1f       	adc	r21, r21
 4fa:	59 f0       	breq	.+22     	; 0x512 <__fp_splitA+0x10>
 4fc:	5f 3f       	cpi	r21, 0xFF	; 255
 4fe:	71 f0       	breq	.+28     	; 0x51c <__fp_splitA+0x1a>
 500:	47 95       	ror	r20

00000502 <__fp_splitA>:
 502:	88 0f       	add	r24, r24
 504:	97 fb       	bst	r25, 7
 506:	99 1f       	adc	r25, r25
 508:	61 f0       	breq	.+24     	; 0x522 <__fp_splitA+0x20>
 50a:	9f 3f       	cpi	r25, 0xFF	; 255
 50c:	79 f0       	breq	.+30     	; 0x52c <__fp_splitA+0x2a>
 50e:	87 95       	ror	r24
 510:	08 95       	ret
 512:	12 16       	cp	r1, r18
 514:	13 06       	cpc	r1, r19
 516:	14 06       	cpc	r1, r20
 518:	55 1f       	adc	r21, r21
 51a:	f2 cf       	rjmp	.-28     	; 0x500 <__fp_split3+0xe>
 51c:	46 95       	lsr	r20
 51e:	f1 df       	rcall	.-30     	; 0x502 <__fp_splitA>
 520:	08 c0       	rjmp	.+16     	; 0x532 <__fp_splitA+0x30>
 522:	16 16       	cp	r1, r22
 524:	17 06       	cpc	r1, r23
 526:	18 06       	cpc	r1, r24
 528:	99 1f       	adc	r25, r25
 52a:	f1 cf       	rjmp	.-30     	; 0x50e <__fp_splitA+0xc>
 52c:	86 95       	lsr	r24
 52e:	71 05       	cpc	r23, r1
 530:	61 05       	cpc	r22, r1
 532:	08 94       	sec
 534:	08 95       	ret

00000536 <__fp_zero>:
 536:	e8 94       	clt

00000538 <__fp_szero>:
 538:	bb 27       	eor	r27, r27
 53a:	66 27       	eor	r22, r22
 53c:	77 27       	eor	r23, r23
 53e:	cb 01       	movw	r24, r22
 540:	97 f9       	bld	r25, 7
 542:	08 95       	ret

00000544 <__mulsf3>:
 544:	0e 94 b5 02 	call	0x56a	; 0x56a <__mulsf3x>
 548:	0c 94 26 03 	jmp	0x64c	; 0x64c <__fp_round>
 54c:	0e 94 18 03 	call	0x630	; 0x630 <__fp_pscA>
 550:	38 f0       	brcs	.+14     	; 0x560 <__mulsf3+0x1c>
 552:	0e 94 1f 03 	call	0x63e	; 0x63e <__fp_pscB>
 556:	20 f0       	brcs	.+8      	; 0x560 <__mulsf3+0x1c>
 558:	95 23       	and	r25, r21
 55a:	11 f0       	breq	.+4      	; 0x560 <__mulsf3+0x1c>
 55c:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_inf>
 560:	0c 94 15 03 	jmp	0x62a	; 0x62a <__fp_nan>
 564:	11 24       	eor	r1, r1
 566:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_szero>

0000056a <__mulsf3x>:
 56a:	0e 94 79 02 	call	0x4f2	; 0x4f2 <__fp_split3>
 56e:	70 f3       	brcs	.-36     	; 0x54c <__mulsf3+0x8>

00000570 <__mulsf3_pse>:
 570:	95 9f       	mul	r25, r21
 572:	c1 f3       	breq	.-16     	; 0x564 <__mulsf3+0x20>
 574:	95 0f       	add	r25, r21
 576:	50 e0       	ldi	r21, 0x00	; 0
 578:	55 1f       	adc	r21, r21
 57a:	62 9f       	mul	r22, r18
 57c:	f0 01       	movw	r30, r0
 57e:	72 9f       	mul	r23, r18
 580:	bb 27       	eor	r27, r27
 582:	f0 0d       	add	r31, r0
 584:	b1 1d       	adc	r27, r1
 586:	63 9f       	mul	r22, r19
 588:	aa 27       	eor	r26, r26
 58a:	f0 0d       	add	r31, r0
 58c:	b1 1d       	adc	r27, r1
 58e:	aa 1f       	adc	r26, r26
 590:	64 9f       	mul	r22, r20
 592:	66 27       	eor	r22, r22
 594:	b0 0d       	add	r27, r0
 596:	a1 1d       	adc	r26, r1
 598:	66 1f       	adc	r22, r22
 59a:	82 9f       	mul	r24, r18
 59c:	22 27       	eor	r18, r18
 59e:	b0 0d       	add	r27, r0
 5a0:	a1 1d       	adc	r26, r1
 5a2:	62 1f       	adc	r22, r18
 5a4:	73 9f       	mul	r23, r19
 5a6:	b0 0d       	add	r27, r0
 5a8:	a1 1d       	adc	r26, r1
 5aa:	62 1f       	adc	r22, r18
 5ac:	83 9f       	mul	r24, r19
 5ae:	a0 0d       	add	r26, r0
 5b0:	61 1d       	adc	r22, r1
 5b2:	22 1f       	adc	r18, r18
 5b4:	74 9f       	mul	r23, r20
 5b6:	33 27       	eor	r19, r19
 5b8:	a0 0d       	add	r26, r0
 5ba:	61 1d       	adc	r22, r1
 5bc:	23 1f       	adc	r18, r19
 5be:	84 9f       	mul	r24, r20
 5c0:	60 0d       	add	r22, r0
 5c2:	21 1d       	adc	r18, r1
 5c4:	82 2f       	mov	r24, r18
 5c6:	76 2f       	mov	r23, r22
 5c8:	6a 2f       	mov	r22, r26
 5ca:	11 24       	eor	r1, r1
 5cc:	9f 57       	subi	r25, 0x7F	; 127
 5ce:	50 40       	sbci	r21, 0x00	; 0
 5d0:	9a f0       	brmi	.+38     	; 0x5f8 <__mulsf3_pse+0x88>
 5d2:	f1 f0       	breq	.+60     	; 0x610 <__mulsf3_pse+0xa0>
 5d4:	88 23       	and	r24, r24
 5d6:	4a f0       	brmi	.+18     	; 0x5ea <__mulsf3_pse+0x7a>
 5d8:	ee 0f       	add	r30, r30
 5da:	ff 1f       	adc	r31, r31
 5dc:	bb 1f       	adc	r27, r27
 5de:	66 1f       	adc	r22, r22
 5e0:	77 1f       	adc	r23, r23
 5e2:	88 1f       	adc	r24, r24
 5e4:	91 50       	subi	r25, 0x01	; 1
 5e6:	50 40       	sbci	r21, 0x00	; 0
 5e8:	a9 f7       	brne	.-22     	; 0x5d4 <__mulsf3_pse+0x64>
 5ea:	9e 3f       	cpi	r25, 0xFE	; 254
 5ec:	51 05       	cpc	r21, r1
 5ee:	80 f0       	brcs	.+32     	; 0x610 <__mulsf3_pse+0xa0>
 5f0:	0c 94 0f 03 	jmp	0x61e	; 0x61e <__fp_inf>
 5f4:	0c 94 9c 02 	jmp	0x538	; 0x538 <__fp_szero>
 5f8:	5f 3f       	cpi	r21, 0xFF	; 255
 5fa:	e4 f3       	brlt	.-8      	; 0x5f4 <__mulsf3_pse+0x84>
 5fc:	98 3e       	cpi	r25, 0xE8	; 232
 5fe:	d4 f3       	brlt	.-12     	; 0x5f4 <__mulsf3_pse+0x84>
 600:	86 95       	lsr	r24
 602:	77 95       	ror	r23
 604:	67 95       	ror	r22
 606:	b7 95       	ror	r27
 608:	f7 95       	ror	r31
 60a:	e7 95       	ror	r30
 60c:	9f 5f       	subi	r25, 0xFF	; 255
 60e:	c1 f7       	brne	.-16     	; 0x600 <__mulsf3_pse+0x90>
 610:	fe 2b       	or	r31, r30
 612:	88 0f       	add	r24, r24
 614:	91 1d       	adc	r25, r1
 616:	96 95       	lsr	r25
 618:	87 95       	ror	r24
 61a:	97 f9       	bld	r25, 7
 61c:	08 95       	ret

0000061e <__fp_inf>:
 61e:	97 f9       	bld	r25, 7
 620:	9f 67       	ori	r25, 0x7F	; 127
 622:	80 e8       	ldi	r24, 0x80	; 128
 624:	70 e0       	ldi	r23, 0x00	; 0
 626:	60 e0       	ldi	r22, 0x00	; 0
 628:	08 95       	ret

0000062a <__fp_nan>:
 62a:	9f ef       	ldi	r25, 0xFF	; 255
 62c:	80 ec       	ldi	r24, 0xC0	; 192
 62e:	08 95       	ret

00000630 <__fp_pscA>:
 630:	00 24       	eor	r0, r0
 632:	0a 94       	dec	r0
 634:	16 16       	cp	r1, r22
 636:	17 06       	cpc	r1, r23
 638:	18 06       	cpc	r1, r24
 63a:	09 06       	cpc	r0, r25
 63c:	08 95       	ret

0000063e <__fp_pscB>:
 63e:	00 24       	eor	r0, r0
 640:	0a 94       	dec	r0
 642:	12 16       	cp	r1, r18
 644:	13 06       	cpc	r1, r19
 646:	14 06       	cpc	r1, r20
 648:	05 06       	cpc	r0, r21
 64a:	08 95       	ret

0000064c <__fp_round>:
 64c:	09 2e       	mov	r0, r25
 64e:	03 94       	inc	r0
 650:	00 0c       	add	r0, r0
 652:	11 f4       	brne	.+4      	; 0x658 <__fp_round+0xc>
 654:	88 23       	and	r24, r24
 656:	52 f0       	brmi	.+20     	; 0x66c <__fp_round+0x20>
 658:	bb 0f       	add	r27, r27
 65a:	40 f4       	brcc	.+16     	; 0x66c <__fp_round+0x20>
 65c:	bf 2b       	or	r27, r31
 65e:	11 f4       	brne	.+4      	; 0x664 <__fp_round+0x18>
 660:	60 ff       	sbrs	r22, 0
 662:	04 c0       	rjmp	.+8      	; 0x66c <__fp_round+0x20>
 664:	6f 5f       	subi	r22, 0xFF	; 255
 666:	7f 4f       	sbci	r23, 0xFF	; 255
 668:	8f 4f       	sbci	r24, 0xFF	; 255
 66a:	9f 4f       	sbci	r25, 0xFF	; 255
 66c:	08 95       	ret

0000066e <__udivmodsi4>:
 66e:	a1 e2       	ldi	r26, 0x21	; 33
 670:	1a 2e       	mov	r1, r26
 672:	aa 1b       	sub	r26, r26
 674:	bb 1b       	sub	r27, r27
 676:	fd 01       	movw	r30, r26
 678:	0d c0       	rjmp	.+26     	; 0x694 <__udivmodsi4_ep>

0000067a <__udivmodsi4_loop>:
 67a:	aa 1f       	adc	r26, r26
 67c:	bb 1f       	adc	r27, r27
 67e:	ee 1f       	adc	r30, r30
 680:	ff 1f       	adc	r31, r31
 682:	a2 17       	cp	r26, r18
 684:	b3 07       	cpc	r27, r19
 686:	e4 07       	cpc	r30, r20
 688:	f5 07       	cpc	r31, r21
 68a:	20 f0       	brcs	.+8      	; 0x694 <__udivmodsi4_ep>
 68c:	a2 1b       	sub	r26, r18
 68e:	b3 0b       	sbc	r27, r19
 690:	e4 0b       	sbc	r30, r20
 692:	f5 0b       	sbc	r31, r21

00000694 <__udivmodsi4_ep>:
 694:	66 1f       	adc	r22, r22
 696:	77 1f       	adc	r23, r23
 698:	88 1f       	adc	r24, r24
 69a:	99 1f       	adc	r25, r25
 69c:	1a 94       	dec	r1
 69e:	69 f7       	brne	.-38     	; 0x67a <__udivmodsi4_loop>
 6a0:	60 95       	com	r22
 6a2:	70 95       	com	r23
 6a4:	80 95       	com	r24
 6a6:	90 95       	com	r25
 6a8:	9b 01       	movw	r18, r22
 6aa:	ac 01       	movw	r20, r24
 6ac:	bd 01       	movw	r22, r26
 6ae:	cf 01       	movw	r24, r30
 6b0:	08 95       	ret

000006b2 <_exit>:
 6b2:	f8 94       	cli

000006b4 <__stop_program>:
 6b4:	ff cf       	rjmp	.-2      	; 0x6b4 <__stop_program>
